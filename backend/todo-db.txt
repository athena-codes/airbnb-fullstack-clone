CREATING NEW TABLES FOR DATABASE:

-- Create Spots table✅
    > npx sequelize model:generate --name Spot --attributes "ownerId:integer,address:string,city:string,state:string,country:string,lat:integer,lng:integer,name:string,price:integer,previewImage:text,description:text,avgStarRating:integer"
  - Add necessary constraints in model and migration files✅
 -- MIGRATE!✅

-- Create SpotImages table✅
      > npx sequelize model:generate --name SpotImage --attributes "url:string, preview:boolean, spotId:integer"
 -- MIGRATE!✅

-- Create Bookings table✅
    > npx sequelize model:generate --name Booking --attributes "spotId:integer,userId:integer,startDate:string,endDate:string"
 -- MIGRATE!✅


--> Confirm all of the appropiate constraints and columns have been added to Users✅
 --> Add associations to USERS:
  - User hasMany Spot (ownerId)✅
  - User hasMany Booking (userId)✅
  - User hasMany Review (userId)

 --> Create associations for all TABLES
    SPOT:
   - Spot belongsTo User (ownerId)✅
   - Spot hasMany Review (spotId)
   - Spot hasMany SpotImage (spotId)✅
   - Spot hasMany Booking (spotId)✅
   SPOTIMAGE:
   - SpotImage belongsTo Spot (spotId)✅
   BOOKING:
   - Booking belongsTo Spot (spotId)✅
   - Booking belongsTo User (userId)✅


*** ERROR CREATING REVIEWS/REVIEWIMAGES ****
-- Create Reviews table ✅
   > npx sequelize model:generate --name Review --attributes "userId:integer,spotId:integer,stars:integer,review:string"
  - Create associations
   - Review belongsTo User (userId)
   - Review belongsTo Spot (spotId)
   - Review hasMany ReviewImage (reviewId)
 -- MIGRATE!

-- Create ReviewImages table
    > npx sequelize model:generate --name ReviewImage --attributes "url:string, review_id:integer"
  - Create associations
   - ReviewImage belongsTo Review (reviewId)

** COMMANDS **
-- Unseed test data
  > npx dotenv sequelize db:seed:undo:all
-- Undo all migrations
 > npx dotenv sequelize db:migrate:undo:all
